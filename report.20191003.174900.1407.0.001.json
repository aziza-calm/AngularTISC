
{
  "header": {
    "reportVersion": 1,
    "event": "Allocation failed - JavaScript heap out of memory",
    "trigger": "FatalError",
    "filename": "report.20191003.174900.1407.0.001.json",
    "dumpEventTime": "2019-10-03T17:49:00Z",
    "dumpEventTimeStamp": "1570114140515",
    "processId": 1407,
    "cwd": "/s/proj/AngularTISC",
    "commandLine": [
      "node",
      "/usr/local/bin/ng",
      "serve",
      "-o"
    ],
    "nodejsVersion": "v12.8.1",
    "wordSize": 64,
    "arch": "x64",
    "platform": "freebsd",
    "componentVersions": {
      "node": "12.8.1",
      "v8": "7.5.288.22-node.16",
      "uv": "1.30.1",
      "zlib": "1.2.11",
      "brotli": "1.0.7",
      "ares": "1.15.0",
      "modules": "72",
      "nghttp2": "1.39.2",
      "napi": "4",
      "llhttp": "1.1.4",
      "http_parser": "2.8.0",
      "openssl": "1.1.1c",
      "cldr": "35.1",
      "icu": "64.2",
      "tz": "2019a",
      "unicode": "12.1"
    },
    "release": {
      "name": "node",
      "headersUrl": "https://nodejs.org/download/release/v12.8.1/node-v12.8.1-headers.tar.gz",
      "sourceUrl": "https://nodejs.org/download/release/v12.8.1/node-v12.8.1.tar.gz"
    },
    "osName": "FreeBSD",
    "osRelease": "11.3-RELEASE",
    "osVersion": "FreeBSD 11.3-RELEASE #0 r349754: Fri Jul  5 04:45:24 UTC 2019     root@releng2.nyi.freebsd.org:/usr/obj/usr/src/sys/GENERIC",
    "osMachine": "amd64",
    "cpus": [
      {
        "model": "AMD A6-5200 APU with Radeon(TM) HD Graphics    ",
        "speed": 1996,
        "user": 447643,
        "nice": 0,
        "sys": 505610,
        "idle": 5213404,
        "irq": 24444
      }
    ],
    "networkInterfaces": [
      {
        "name": "em0",
        "internal": false,
        "mac": "08:00:27:e0:05:f9",
        "address": "172.16.151.180",
        "netmask": "255.255.255.0",
        "family": "IPv4"
      },
      {
        "name": "lo0",
        "internal": true,
        "mac": "00:00:00:00:00:00",
        "address": "::1",
        "netmask": "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff",
        "family": "IPv6",
        "scopeid": 0
      },
      {
        "name": "lo0",
        "internal": true,
        "mac": "00:00:00:00:00:00",
        "address": "fe80::1",
        "netmask": "ffff:ffff:ffff:ffff::",
        "family": "IPv6",
        "scopeid": 2
      },
      {
        "name": "lo0",
        "internal": true,
        "mac": "00:00:00:00:00:00",
        "address": "127.0.0.1",
        "netmask": "255.0.0.0",
        "family": "IPv4"
      }
    ],
    "host": "ConcepTIS"
  },
  "javascriptStack": {
    "message": "No stack.",
    "stack": [
      "Unavailable."
    ]
  },
  "nativeStack": [
    {
      "pc": "0x00000000009c8621",
      "symbol": "report::TriggerNodeReport(v8::Isolate*, node::Environment*, char const*, char const, std::__1::basic_string<char, char const*::char_traits<char>, char const*::allocator<char> > const&, report::TriggerNodeReport::Local<report::TriggerNodeReport::String>) [/usr/local/bin/node]"
    },
    {
      "pc": "0x00000000008ceb91",
      "symbol": "node::OnFatalError(char const*, char const) [/usr/local/bin/node]"
    },
    {
      "pc": "0x0000000000a03ec3",
      "symbol": "v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [/usr/local/bin/node]"
    },
    {
      "pc": "0x0000000000a03e6a",
      "symbol": "v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [/usr/local/bin/node]"
    },
    {
      "pc": "0x0000000000bbd215",
      "symbol": "v8::internal::Heap::FatalProcessOutOfMemory(char const*) [/usr/local/bin/node]"
    },
    {
      "pc": "0x0000000000bbbe7b",
      "symbol": "v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::GCCallbackFlags) [/usr/local/bin/node]"
    },
    {
      "pc": "0x0000000000bb95c3",
      "symbol": "v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) [/usr/local/bin/node]"
    },
    {
      "pc": "0x0000000000bc43d4",
      "symbol": "v8::internal::Heap::AllocateRawWithLightRetry(int, v8::internal::AllocationType, v8::internal::AllocationAlignment) [/usr/local/bin/node]"
    },
    {
      "pc": "0x0000000000bc444f",
      "symbol": "v8::internal::Heap::AllocateRawWithRetryOrFail(int, v8::internal::AllocationType, v8::internal::AllocationAlignment) [/usr/local/bin/node]"
    },
    {
      "pc": "0x0000000000b963d6",
      "symbol": "v8::internal::Factory::NewFillerObject(int, bool, v8::internal::AllocationType) [/usr/local/bin/node]"
    }
  ],
  "javascriptHeap": {
    "totalMemory": 271429632,
    "totalCommittedMemory": 271429632,
    "usedMemory": 257156752,
    "availableMemory": 10692600,
    "memoryLimit": 271581184,
    "heapSpaces": {
      "read_only_space": {
        "memorySize": 262144,
        "committedMemory": 262144,
        "capacity": 261832,
        "used": 31960,
        "available": 229872
      },
      "new_space": {
        "memorySize": 2097152,
        "committedMemory": 2097152,
        "capacity": 1047328,
        "used": 452944,
        "available": 594384
      },
      "old_space": {
        "memorySize": 216936448,
        "committedMemory": 216936448,
        "capacity": 216572744,
        "used": 207903280,
        "available": 8669464
      },
      "code_space": {
        "memorySize": 2260992,
        "committedMemory": 2260992,
        "capacity": 1717504,
        "used": 1717504,
        "available": 0
      },
      "map_space": {
        "memorySize": 5509120,
        "committedMemory": 5509120,
        "capacity": 2889920,
        "used": 2889920,
        "available": 0
      },
      "large_object_space": {
        "memorySize": 43741184,
        "committedMemory": 43741184,
        "capacity": 43610584,
        "used": 43610584,
        "available": 0
      },
      "code_large_object_space": {
        "memorySize": 622592,
        "committedMemory": 622592,
        "capacity": 550560,
        "used": 550560,
        "available": 0
      },
      "new_large_object_space": {
        "memorySize": 0,
        "committedMemory": 0,
        "capacity": 1047328,
        "used": 0,
        "available": 1047328
      }
    }
  },
  "resourceUsage": {
    "userCpuSeconds": 68.7686,
    "kernelCpuSeconds": 13.9906,
    "cpuConsumptionPercent": 77.3451,
    "maxRss": 277086208,
    "pageFaults": {
      "IORequired": 372,
      "IONotRequired": 197054
    },
    "fsActivity": {
      "reads": 3014,
      "writes": 0
    }
  },
  "uvthreadResourceUsage": {
    "userCpuSeconds": 41.5205,
    "kernelCpuSeconds": 12.6087,
    "cpuConsumptionPercent": 50.588,
    "fsActivity": {
      "reads": 2965,
      "writes": 0
    }
  },
  "libuv": [
  ],
  "environmentVariables": {
    "WEBPACK_DEV_SERVER": "true",
    "STY": "1398.pts-0.ConcepTIS",
    "TERM": "screen",
    "TERMCAP": "SC|screen|VT 100/ANSI X3.64 virtual terminal:\\\n\t:DO=\\E[%dB:LE=\\E[%dD:RI=\\E[%dC:UP=\\E[%dA:bs:bt=\\E[Z:\\\n\t:cd=\\E[J:ce=\\E[K:cl=\\E[H\\E[J:cm=\\E[%i%d;%dH:ct=\\E[3g:\\\n\t:do=^J:nd=\\E[C:pt:rc=\\E8:rs=\\Ec:sc=\\E7:st=\\EH:up=\\EM:\\\n\t:le=^H:bl=^G:cr=^M:it#8:ho=\\E[H:nw=\\EE:ta=^I:is=\\E)0:\\\n\t:li#42:co#106:am:xn:xv:LP:sr=\\EM:al=\\E[L:AL=\\E[%dL:\\\n\t:cs=\\E[%i%d;%dr:dl=\\E[M:DL=\\E[%dM:dc=\\E[P:DC=\\E[%dP:\\\n\t:im=\\E[4h:ei=\\E[4l:mi:IC=\\E[%d@:ks=\\E[?1h\\E=:\\\n\t:ke=\\E[?1l\\E>:vi=\\E[?25l:ve=\\E[34h\\E[?25h:vs=\\E[34l:\\\n\t:ti=\\E[?1049h:te=\\E[?1049l:us=\\E[4m:ue=\\E[24m:so=\\E[3m:\\\n\t:se=\\E[23m:md=\\E[1m:mr=\\E[7m:me=\\E[m:ms:\\\n\t:Co#8:pa#64:AF=\\E[3%dm:AB=\\E[4%dm:op=\\E[39;49m:AX:G0:\\\n\t:as=\\E(0:ae=\\E(B:\\\n\t:ac=\\140\\140aaffggjjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~..--++,,hhII00:\\\n\t:Km=\\E[M:k0=\\E[10~:k1=\\EOP:k2=\\EOQ:k3=\\EOR:k4=\\EOS:\\\n\t:k5=\\E[15~:k6=\\E[17~:k7=\\E[18~:k8=\\E[19~:k9=\\E[20~:\\\n\t:k;=\\E[21~:F1=\\E[23~:F2=\\E[24~:kb=^H:K2=\\EOE:kB=\\E[Z:\\\n\t:kh=\\E[1~:@1=\\E[1~:kH=\\E[4~:@7=\\E[4~:kN=\\E[6~:kP=\\E[5~:\\\n\t:kI=\\E[2~:kD=\\E[3~:ku=\\EOA:kd=\\EOB:kr=\\EOC:kl=\\EOD:km:",
    "WINDOW": "1",
    "SHELL": "/bin/csh",
    "USER": "azizacalm",
    "LOGNAME": "azizacalm",
    "HOME": "/home/azizacalm",
    "MAIL": "/var/mail/azizacalm",
    "PATH": "/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin:/home/azizacalm/bin",
    "BLOCKSIZE": "K",
    "MM_CHARSET": "UTF-8",
    "LANG": "ru_RU.UTF-8",
    "SSH_CLIENT": "172.16.151.185 54032 22",
    "SSH_CONNECTION": "172.16.151.185 54032 172.16.151.180 22",
    "SSH_TTY": "/dev/pts/0",
    "HOSTTYPE": "FreeBSD",
    "VENDOR": "amd",
    "OSTYPE": "FreeBSD",
    "MACHTYPE": "x86_64",
    "SHLVL": "1",
    "PWD": "/s/proj/AngularTISC",
    "GROUP": "azizacalm",
    "HOST": "ConcepTIS",
    "REMOTEHOST": "172.16.151.185",
    "EDITOR": "vi",
    "PAGER": "more"
  },
  "userLimits": {
    "core_file_size_blocks": {
      "soft": "unlimited",
      "hard": "unlimited"
    },
    "data_seg_size_kbytes": {
      "soft": 34359738368,
      "hard": 34359738368
    },
    "file_size_blocks": {
      "soft": "unlimited",
      "hard": "unlimited"
    },
    "max_locked_memory_bytes": {
      "soft": 65536,
      "hard": 65536
    },
    "max_memory_size_kbytes": {
      "soft": "unlimited",
      "hard": "unlimited"
    },
    "open_files": {
      "soft": 13752,
      "hard": 13752
    },
    "stack_size_bytes": {
      "soft": 536870912,
      "hard": 536870912
    },
    "cpu_time_seconds": {
      "soft": "unlimited",
      "hard": "unlimited"
    },
    "max_user_processes": {
      "soft": 3445,
      "hard": 3445
    },
    "virtual_memory_kbytes": {
      "soft": "unlimited",
      "hard": "unlimited"
    }
  },
  "sharedObjects": [
    "/usr/local/bin/node",
    "/lib/libz.so.6",
    "/usr/local/lib/libuv.so.1",
    "/usr/local/lib/libcares.so.2",
    "/usr/local/lib/libnghttp2.so.14",
    "/usr/local/lib/libicui18n.so.64",
    "/usr/local/lib/libicuuc.so.64",
    "/usr/local/lib/libicudata.so.64",
    "/lib/libelf.so.2",
    "/lib/libutil.so.9",
    "/lib/libkvm.so.7",
    "/usr/lib/libexecinfo.so.1",
    "/usr/lib/libc++.so.1",
    "/lib/libcxxrt.so.1",
    "/lib/libm.so.5",
    "/lib/libthr.so.3",
    "/lib/libc.so.7",
    "/usr/lib/librt.so.1",
    "/usr/lib/libdl.so.1",
    "/lib/libgcc_s.so.1",
    "/libexec/ld-elf.so.1"
  ]
}